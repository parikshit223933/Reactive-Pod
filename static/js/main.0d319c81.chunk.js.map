{"version":3,"sources":["Buttons.js","Screens/MenuItems.js","Screens/Menu.js","Screens/Games.js","Screens/Setting.js","Screens/Coverflow.js","Screens/PlayMusic.js","Screens/AllSongs.js","Screens/Artists.js","Screens/Albums.js","Screen.js","App.js","serviceWorker.js","index.js"],"names":["Buttons","props","className","onClick","selectButtonClicked","menuButtonClicked","leftButtonClicked","rightButtonClicked","playPauseButtonClicked","MenuItems","optionsInMenu","this","Fragment","map","item","index","selectedOption","key","length","style","color","fontSize","React","Component","Menu","Game","Setting","Coverflow","Music","currentlyOnPlayMusicScreen","songIndex","Songs","name","src","alt","marginTop","controls","id","url","AllSongs","new_data_array","state","all_songs_list","loading","firebase","ref","child","listAll","then","data","items","forEach","a","getDownloadURL","push","setState","catch","error","console","log","PlayMusic","currentMusicSelection","Artists","Albums","Screen","showPage","App","document","getElementsByClassName","classList","contains","$","removeClass","addClass","currently_on_play_music_screen","selected","options","songs_sub_menu","song_index","temp_selected","current_music_selection","undefined","general_menu","paused","play","pause","rotatePod","toggleClass","temp_change_in_angle","change_in_angle","ZingTouch","Region","bind","event","dist","detail","distanceFromLast","check","checker","centerButton","Boolean","window","location","hostname","match","firebaseConfig","apiKey","process","REACTIVE_POD_API_KEY","authDomain","REACTIVE_POD_AUTH_DOMAIN","databaseURL","projectId","storageBucket","messagingSenderId","REACTIVE_POD_MESSAGEING_SENDER_ID","appId","REACTIVE_POD_APP_ID","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0d319c81.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Buttons = (props) =>\r\n{\r\n    return (\r\n        <div className=\"buttons-container\">\r\n            <button className=\"center-circle\" onClick={props.selectButtonClicked}>\r\n                <h2>Select</h2>\r\n            </button>\r\n\r\n            <button className=\"menu-button\" onClick={props.menuButtonClicked}>\r\n                <i className=\"fas fa-bars\"></i>\r\n            </button>\r\n            <button className=\"left-button\" onClick={props.leftButtonClicked}>\r\n                <i className=\"fas fa-backward\"></i>\r\n            </button>\r\n            <button className=\"right-button\" onClick={props.rightButtonClicked}>\r\n                <i className=\"fas fa-forward\"></i>\r\n            </button>\r\n            <button className=\"play-pause\" onClick={props.playPauseButtonClicked}>\r\n                <i className=\"fas fa-play\"></i>/<i className=\"fas fa-pause\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buttons;","import React from 'react';\r\n\r\nclass MenuItems extends React.Component\r\n{\r\n    render()\r\n    {\r\n        const { optionsInMenu } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n                {\r\n                    optionsInMenu.map((item, index) =>\r\n                    {\r\n                        return (\r\n                            <div className={this.props.selectedOption === index ? 'selected' : ''} key={index}>\r\n                                <p>{item}</p>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                {optionsInMenu.length === 3 ?\r\n                    <div style={{color:'green'}}>\r\n                        <p style={{fontSize:18}}>click \"<i className=\"fas fa-backward\"></i>\" to go back</p>\r\n                    </div>:''\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default MenuItems;","import React from 'react';\r\nimport MenuItems from './MenuItems';\r\n\r\nclass Menu extends React.Component\r\n{\r\n    render()\r\n    {\r\n        const { selectedOption } = this.props;\r\n        return (\r\n            <div className=\"screen-menu\">\r\n                <div className=\"app-logo\">\r\n                    <h3><i>REACTIVE POD</i></h3>\r\n                </div>\r\n                <MenuItems\r\n                    optionsInMenu={this.props.optionsInMenu}\r\n                    selectedOption={selectedOption}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\n\r\nclass Game extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"screen-game\">\r\n                <h1>Games</h1>\r\n                <div>\r\n                    <i className=\"fas fa-gamepad\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Game;","import React from 'react';\r\n\r\nclass Setting extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"screen-setting\">\r\n                <h1>Settings</h1>\r\n                <div>\r\n                    <i className=\"fas fa-cogs\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Setting;","import React from 'react';\r\n\r\nclass Coverflow extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"screen-coverflow\">\r\n                <h1>Cover Flow</h1>\r\n                <div>\r\n                    <i className=\"fas fa-photo-video\"></i>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Coverflow;","import React from 'react';\r\n\r\nclass Music extends React.Component\r\n{\r\n    componentDidMount()\r\n    {\r\n        this.props.currentlyOnPlayMusicScreen();\r\n        this.props.playPauseButtonClicked();\r\n    }\r\n    componentWillUnmount()\r\n    {\r\n        this.props.currentlyOnPlayMusicScreen()\r\n    }\r\n    render()\r\n    {\r\n        const {songIndex, Songs}=this.props;\r\n        return (\r\n            <div className=\"screen-music\">\r\n                <h2>{Songs[songIndex].name}</h2>\r\n                <div className=\"song-image\">\r\n                    <img src={'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcTzrIyTb8emnPtXD2EYZ1nkSdIkYZ2zxUzUhw&usqp=CAU'} alt=\"song item\"></img>\r\n                </div>\r\n                <div style={{marginTop:20}}>\r\n                    <audio controls=\"seeking\" id=\"audio\" src={Songs[songIndex].url}></audio>\r\n                </div>\r\n                <div className='screen-music-instruction'>\r\n                    <p>\r\n                        Press \"<i className=\"fas fa-play\"></i>/<i className=\"fas fa-pause\"></i>\" button to play/pause.\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Music;","import React from 'react';\r\nimport * as firebase from 'firebase';\r\nimport PlayMusic from './PlayMusic';\r\nclass AllSongs extends React.Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.new_data_array = []\r\n        this.state = {\r\n            all_songs_list: [],\r\n            loading: true\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        firebase.storage().ref().child('music').listAll()\r\n            .then((data) =>\r\n            {\r\n                data.items.forEach(async (ref) =>\r\n                {\r\n                    await ref.getDownloadURL()\r\n                        .then((url) =>\r\n                        {\r\n                            this.new_data_array.push({ name: ref.name, url: url });\r\n                            if (this.new_data_array.length === 6)//load the component when all the songs are added to the array.\r\n                            {\r\n                                this.setState({\r\n                                    all_songs_list: this.new_data_array,\r\n                                    loading: false\r\n                                });\r\n                            }\r\n                        })\r\n                        .catch((error) =>\r\n                        {\r\n                            console.log(error);\r\n                        })\r\n                })\r\n            })\r\n            .catch((error) =>\r\n            {\r\n                if (error)\r\n                {\r\n                    console.log(error);\r\n                }\r\n            })\r\n    }\r\n    render()\r\n    {\r\n        if (this.props.songIndex !== -1)\r\n        {\r\n            return <PlayMusic\r\n                songIndex={this.props.songIndex}\r\n                Songs={this.state.all_songs_list}\r\n                currentlyOnPlayMusicScreen={this.props.currentlyOnPlayMusicScreen}\r\n                playPauseButtonClicked={this.props.playPauseButtonClicked}\r\n            />;\r\n        }\r\n        return (this.state.loading ? \r\n            \r\n            <div className='loading-screen'>\r\n                <h1>Loading...</h1>\r\n                <div className=\"loader\"></div>\r\n                <div>Please make sure that you are connected to the internet. Songs are fetched from the firebase storage.</div>\r\n            </div>\r\n            :\r\n            <div className=\"all-songs\">\r\n                <h1 className=\"all-songs-heading\">\r\n                    All Songs\r\n                </h1>\r\n                <div className=\"all-songs-list\">\r\n                    {this.state.all_songs_list.map((item, index) =>\r\n                    {\r\n\r\n                        return (\r\n                            <div className={this.props.currentMusicSelection === index ? 'selected-song' : ''} key={index}>\r\n                                {item.name}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div className=\"instruction-all-songs\">\r\n                        Use \"<i className=\"fas fa-backward\"></i>\" and \"<i className=\"fas fa-forward\"></i>\" buttons to navigate.\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default AllSongs;","import React from 'react';\r\n\r\nclass Artists extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"artists-screen\">\r\n                <h1>\r\n                    Artists\r\n                </h1>\r\n                <div>\r\n                    <i className=\"far fa-smile\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Artists;","import React from 'react';\r\n\r\nclass Albums extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"albums-screen\">\r\n                <h1>\r\n                    Albums\r\n                </h1>\r\n                <div>\r\n                    <i className=\"fas fa-icons\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Albums;","import React from 'react';\r\nimport Menu from './Screens/Menu';\r\nimport Game from './Screens/Games';\r\nimport Setting from './Screens/Setting';\r\nimport Coverflow from './Screens/Coverflow';\r\n/* music */\r\nimport AllSongs from './Screens/AllSongs';\r\nimport Artists from './Screens/Artists';\r\nimport Albums from './Screens/Albums';\r\n\r\nclass Screen extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"screen-container\">\r\n                <Menu\r\n                    selectedOption={this.props.selectedOption}\r\n                    optionsInMenu={this.props.optionsInMenu}\r\n                />\r\n                {this.props.showPage === 0 && this.props.optionsInMenu.length === 4 ? <Game /> : ''}\r\n                {this.props.showPage === 2 && this.props.optionsInMenu.length === 4 ? <Setting /> : ''}\r\n                {this.props.showPage === 3 && this.props.optionsInMenu.length === 4 ? <Coverflow /> : ''}\r\n\r\n                {this.props.showPage === 0 && this.props.optionsInMenu.length === 3 ? <AllSongs\r\n                currentMusicSelection={this.props.currentMusicSelection}\r\n                songIndex={this.props.songIndex}\r\n                currentlyOnPlayMusicScreen={this.props.currentlyOnPlayMusicScreen}\r\n                playPauseButtonClicked={this.props.playPauseButtonClicked}\r\n                /> : ''}\r\n                {this.props.showPage === 1 && this.props.optionsInMenu.length === 3 ? <Artists /> : ''}\r\n                {this.props.showPage === 2 && this.props.optionsInMenu.length === 3 ? <Albums /> : ''}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Screen;","import React from 'react';\nimport './App.css';\nimport Buttons from './Buttons';\nimport Screen from './Screen';\nimport ZingTouch from 'zingtouch';\nimport 'lodash';\nimport $ from 'jquery';\n\nclass App extends React.Component\n{\n    constructor()\n    {\n        super();\n        this.temp_change_in_angle = 0;\n        this.temp_selected = 0;\n        this.state = {\n            options: ['Games', 'Music', 'Settings', 'CoverFlow'],\n            change_in_angle: 0,\n            selected: 0,\n            showPage: -1,\n            general_menu: ['Games', 'Music', 'Settings', 'Cover Flow'],\n            songs_sub_menu: ['All Songs', 'Artists', 'Albums'],\n            current_music_selection: 0,\n            song_index: -1,\n            currently_on_play_music_screen: false,\n        }\n    }\n\n    componentDidMount()\n    {\n        var zt = new ZingTouch.Region(document.getElementsByClassName('buttons-container')[0]);\n        zt.bind(document.getElementsByClassName('buttons-container')[0], 'rotate', (event) =>\n        {\n            if (document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//this rotating facility will only be available when the side bar is shown to the user.\n            {\n                let dist = event.detail.distanceFromLast;\n                this.temp_change_in_angle += dist;\n                if (this.temp_change_in_angle > 60)\n                {\n                    this.temp_selected++;\n                    this.temp_selected = this.temp_selected % this.state.options.length;\n                    this.setState({\n                        selected: this.temp_selected,\n                        // song_index: -1\n                    });\n\n                    this.temp_change_in_angle = 0;\n                }\n                else if (this.temp_change_in_angle < -60)\n                {\n                    this.temp_selected--;\n                    if (this.temp_selected === -1)\n                        this.temp_selected = this.state.options.length - 1;\n\n                    this.temp_selected = this.temp_selected % this.state.options.length;\n                    this.setState({\n                        selected: this.temp_selected,\n                        // song_index: -1\n                    });\n                    this.temp_change_in_angle = 0;\n                }\n            }\n\n        });\n    }\n\n    menuButtonClicked = () =>\n    {\n        /* if (this.state.options === this.state.songs_sub_menu)\n        {\n            this.setState({\n                options: this.state.general_menu\n            });\n            return;\n        } */\n\n        let screenMenuClassList = document.getElementsByClassName('screen-menu')[0].classList;\n        if (screenMenuClassList.contains('width-50'))\n        {\n            $('.screen-menu').removeClass('width-50');//hide menu\n        }\n        else\n        {\n            $('.screen-menu').addClass('width-50');//show menu\n        }\n    }\n\n    selectButtonClicked = () =>\n    {\n        if(this.state.currently_on_play_music_screen&&!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//if i am currently on the play music screen and the side bar is hidden, in that case if i click on the select button, ideally nothing should happen.\n        {\n            return;\n        }\n        if (this.state.selected === 1 && this.state.options.length === 4)\n        {\n            this.setState(\n                {\n                    options: this.state.songs_sub_menu,\n                    selected: 0,\n                    showPage: -1,\n                    song_index: -1,//we dont want to play any song\n                }\n            );\n            this.temp_selected = 0;\n            return;\n        }\n        if (!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//side menu is not visible\n        {\n            if (this.state.options.length === 3)//I must be on the music section\n            {\n                if (this.state.showPage === 0)//I am on all songs page\n                {\n                    if (this.state.song_index === -1)//we are not on the music page\n                    {\n                        this.setState({\n                            song_index: this.state.current_music_selection,//which song to play (here we want to play a song)\n                        });\n                        this.temp_selected = 0;\n                        return;\n                    }\n\n                }\n            }\n        }\n        this.setState({\n            showPage: this.state.selected,\n            song_index: -1,//we dont want to play any song\n            selected: 0,\n        });\n        this.temp_selected = 0;\n        this.menuButtonClicked();\n    }\n\n\n    leftButtonClicked = () =>\n    {\n        /* the left button could have also been clicked to change the song which is currently being played to the previous song. */\n        if (this.state.currently_on_play_music_screen)//if i am on the play music screen\n        {\n            if (!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//if the menu is not present on the screen\n            {\n                if ($('#audio')[0] !== undefined)/* handling the turning off of button lights when i play the next song  */\n                {\n                    $('.buttons-container').removeClass('colored');\n                }\n                //here i can switch to next song\n                if (this.state.song_index === 0)\n                {\n                    this.setState({\n                        song_index: 5\n                    });\n                    return;\n                }\n                if (this.state.song_index !== -1)\n                {\n                    this.setState({\n                        song_index: this.state.song_index - 1\n                    });\n                    return;\n                }\n            }\n        }\n\n        if (this.state.options.length === 3 && document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//if the menu is open and it is on the songs page only then if the left button clicked, menu will be changed to general options\n            this.setState(\n                {\n                    options: this.state.general_menu,\n                    song_index: -1,\n                    selected: 0\n                }\n            );\n        if (!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//side menu is not visible\n        {\n            if (this.state.options.length === 3)//I must be on the music section\n            {\n                if (this.state.showPage === 0)//I am on all songs page\n                {\n                    if (this.state.current_music_selection === 0)//If I am playing the music at 5th index then I will need to reduce the index to 0 on next right button click.\n                        this.setState({\n                            current_music_selection: 5,\n                            song_index: -1\n                        });\n                    else\n                        this.setState({\n                            current_music_selection: this.state.current_music_selection - 1,\n                            song_index: -1\n                        });\n                }\n            }\n        }\n    }\n\n    rightButtonClicked = () =>\n    {\n        /* the right button could have also been clicked to change the song which is currently being played to the next song. */\n        if (this.state.currently_on_play_music_screen)//if i am on the play music screen\n        {\n            if (!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//if the menu is not present on the screen\n            {\n                if ($('#audio')[0] !== undefined)/* handling the turning off of button lights when i play the next song  */\n                {\n                    $('.buttons-container').removeClass('colored');\n                }\n                //here i can switch to next song\n                if (this.state.song_index === 5)\n                {\n                    this.setState({\n                        song_index: 0\n                    });\n                    return;\n                }\n                if (this.state.song_index !== -1)\n                {\n                    this.setState({\n                        song_index: this.state.song_index + 1\n                    });\n                    return;\n                }\n            }\n        }\n        if (!document.getElementsByClassName('screen-menu')[0].classList.contains('width-50'))//side menu is not visible\n        {\n            if (this.state.options.length === 3)//I must be on the music section\n            {\n                if (this.state.showPage === 0)//I am on all songs page\n                {\n                    if (this.state.current_music_selection === 5)//If I am playing the music at 5th index then I will need to reduce the index to 0 on next right button click.\n                        this.setState({\n                            current_music_selection: 0\n                        });\n                    else\n                        this.setState({\n                            current_music_selection: this.state.current_music_selection + 1\n                        });\n                }\n            }\n        }\n    }\n\n    currentlyOnPlayMusicScreen = () =>\n    {\n        if (this.state.currently_on_play_music_screen)\n        {\n            $('.buttons-container').removeClass('colored');\n            this.setState({\n                currently_on_play_music_screen: false\n            });\n        }\n        else\n            this.setState({\n                currently_on_play_music_screen: true\n            });\n    }\n\n    playPauseButtonClicked = () =>\n    {\n        if ($('#audio')[0] !== undefined)\n        {\n            if ($('#audio')[0].paused)//if the music is paused i will play it, also turn on the button lights\n            {\n                $('#audio')[0].play();\n                $('.buttons-container').addClass('colored');\n                return;\n            }\n            $('#audio')[0].pause();\n            $('.buttons-container').removeClass('colored');\n        }\n    }\n\n    rotatePod=()=>\n    {\n        /* screen rotation feature */\n        $('.App').toggleClass('rotate-anti-clockwise');\n        $('.buttons-container').toggleClass('rotate-clockwise');\n        $('.screen-container').toggleClass('rotate-clockwise');\n    }\n\n    render()\n    {\n        return (\n            <div className=\"App\">\n                <Screen\n                    selectedOption={this.state.selected}\n                    showPage={this.state.showPage}\n                    optionsInMenu={this.state.options}\n                    currentMusicSelection={this.state.current_music_selection}\n                    songIndex={this.state.song_index}\n                    currentlyOnPlayMusicScreen={this.currentlyOnPlayMusicScreen}\n                    playPauseButtonClicked={this.playPauseButtonClicked}\n\n                />\n                <Buttons\n                    check={this.checker}\n                    centerButton={this.centerButton}\n                    menuButtonClicked={this.menuButtonClicked}\n                    selectButtonClicked={this.selectButtonClicked}\n                    leftButtonClicked={this.leftButtonClicked}\n                    rightButtonClicked={this.rightButtonClicked}\n                    playPauseButtonClicked={this.playPauseButtonClicked}\n                />\n                <button className=\"rotate\" onClick={this.rotatePod}>\n                    <i className=\"fas fa-undo\"></i>\n                </button>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport * as firebase from 'firebase';\n\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: process.env.REACTIVE_POD_API_KEY,\n    authDomain: process.env.REACTIVE_POD_AUTH_DOMAIN,\n    databaseURL: \"https://reactive-pod.firebaseio.com\",\n    projectId: \"reactive-pod\",\n    storageBucket: \"reactive-pod.appspot.com\",\n    messagingSenderId: process.env.REACTIVE_POD_MESSAGEING_SENDER_ID,\n    appId: process.env.REACTIVE_POD_APP_ID\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}